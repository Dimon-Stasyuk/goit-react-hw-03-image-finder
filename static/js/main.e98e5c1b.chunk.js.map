{"version":3,"sources":["components/Button/Button.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","App.js","index.js"],"names":["Button","OnBtn","type","className","onClick","Spinner","color","height","width","ImageGalleryItem","this","props","images","map","webformatURL","largeImageURL","id","onModalOpen","ongetImg","src","alt","React","Component","Modal","handleKeyDown","event","code","OnModalClose","window","addEventListener","removeEventListener","onClose","img","ImageGallery","state","image","page","modal","largeImg","loading","btn","onFetch","setState","setTimeout","fetch","name","then","response","json","prevState","hits","pageIncrement","scrollPage","modalTogle","getLargeImg","ovarlayClose","target","currentTarget","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","Searchbar","reset","handleNameChange","value","onSubmit","preventDefault","trim","getName","toast","error","onChange","autoComplete","autoFocus","placeholder","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e98e5c1b.chunk.js","sourcesContent":["import \"./Button.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ OnBtn }) => {\r\n  return (\r\n    <button type='button' className='Button' onClick={OnBtn}>\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  OnBtn: PropTypes.func.isRequired,\r\n};\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"./Loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='loader-container'>\r\n      <Loader type='ThreeDots' color='#3f51b5' height={60} width={60} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n// import shortid from \"shortid\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nclass ImageGalleryItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.images.map(({ webformatURL, largeImageURL, id }) => {\r\n          return (\r\n            <li\r\n              className='ImageGalleryItem'\r\n              key={id}\r\n              onClick={() => {\r\n                this.props.onModalOpen();\r\n                this.props.ongetImg(largeImageURL);\r\n              }}>\r\n              <img\r\n                src={webformatURL}\r\n                alt=''\r\n                className='ImageGalleryItem-image'\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport \"./Modal.css\";\r\n\r\nclass Modal extends React.Component {\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.OnModalClose();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='Overlay' onClick={this.props.onClose}>\r\n        <div className='Modal'>\r\n          <img src={this.props.img} alt='' />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport Spinner from \"../Loader/Loader\";\r\nimport \"./ImageGallery.css\";\r\n\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nexport default class ImageGallery extends React.Component {\r\n  state = {\r\n    image: null,\r\n    page: 1,\r\n    modal: false,\r\n    largeImg: null,\r\n    loading: false,\r\n    btn: false,\r\n  };\r\n\r\n  onFetch = () => {\r\n    const key = \"23097756-2661a8d66efd3b5956221c710\";\r\n    this.setState({ loading: true, btn: false });\r\n    setTimeout(() => {\r\n      fetch(\r\n        `https://pixabay.com/api/?q=${this.props.name}&page=${this.state.page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n      )\r\n        .then((response) => response.json())\r\n        .then((response) =>\r\n          this.setState((prevState) => ({\r\n            image: [...prevState.image, ...response.hits],\r\n            btn: true,\r\n          })),\r\n        );\r\n\r\n      this.pageIncrement();\r\n      this.scrollPage();\r\n      this.setState({ loading: false });\r\n    }, 500);\r\n  };\r\n\r\n  modalTogle = () => {\r\n    this.setState((prevState) => ({\r\n      modal: !prevState.modal,\r\n    }));\r\n  };\r\n\r\n  getLargeImg = (img) => {\r\n    this.setState({ largeImg: img });\r\n  };\r\n\r\n  ovarlayClose = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      this.modalTogle();\r\n    }\r\n  };\r\n\r\n  scrollPage = () => {\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  pageIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.name !== this.props.name) {\r\n      this.setState({ image: [], page: 1 });\r\n      this.onFetch();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className='ImageGallery'>\r\n          {this.state.image && (\r\n            <ImageGalleryItem\r\n              images={this.state.image}\r\n              onModalOpen={this.modalTogle}\r\n              ongetImg={this.getLargeImg}\r\n            />\r\n          )}\r\n        </ul>\r\n        {this.state.btn && <Button OnBtn={this.onFetch} />}\r\n        {this.state.loading && <Spinner />}\r\n        {this.state.modal && (\r\n          <Modal\r\n            onClose={this.ovarlayClose}\r\n            OnModalClose={this.modalTogle}\r\n            img={this.state.largeImg}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./Searchbar.css\";\r\n\r\nexport default class Searchbar extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n    });\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({\r\n      name: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.name.trim() === \"\") {\r\n      toast.error(\"Enter the name of the picture\");\r\n      return;\r\n    }\r\n    this.reset();\r\n    this.props.getName(this.state.name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='Searchbar'>\r\n        <form className='SearchForm' onSubmit={this.onSubmit}>\r\n          <button type='submit' className='SearchForm-button'>\r\n            <span className='SearchForm-button-label'>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n            className='SearchForm-input'\r\n            type='text'\r\n            autoComplete='off'\r\n            autoFocus\r\n            placeholder='Search images and photos'\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\r\nimport Searchbar from \"./components/Searchbar/Searchbar\";\r\nimport \"./styles.css\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n  };\r\n\r\n  handleNameChange = (name) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Searchbar getName={this.handleNameChange} />\r\n        <ImageGallery name={this.state.name} />\r\n        <ToastContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nApp.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}